---
# Template for S3 to SFTP solution

AWSTemplateFormatVersion: '2010-09-09'
Description: Template for S3 to SFTP transfer jobs.
Conditions:
  NotUseCfnExportsCondition: !Not
    - !Condition 'UseExportsCondition'
  NotUseMicroserviceHostnameCondition: !Equals
    - !Ref 'MicroserviceHostname'
    - default
  NotUseVpcMapId: !Equals
    - !Ref 'VpcDiscoveryMapId'
    - default
  ServiceCountIsZeroCondition: !Equals
    - !Ref 'MicroservicesCount'
    - '0'
  ServiceCountZeroAndFargate: !And
    - !Condition 'UseFargateCondition'
    - !Condition 'ServiceCountIsZeroCondition'
  UseCfnAndSsmCondition: !And
    - !Condition 'UseExportsCondition'
    - !Condition 'UseSsmExportsCondition'
  UseExportsCondition: !Equals
    - !Ref 'UseCfnExports'
    - 'True'
  UseFargateCondition: !Equals
    - !Ref 'EcsLaunchType'
    - FARGATE
  UseMicroserviceHostnameCondition: !Not
    - !Condition 'NotUseMicroserviceHostnameCondition'
  UseSsmExportsCondition: !Equals
    - !Ref 'UseSsmExports'
    - 'True'
  UseSsmOnlyCondition: !And
    - !Condition 'UseSsmExportsCondition'
    - !Condition 'NotUseCfnExportsCondition'
  UseStackName: !Equals
    - !Ref 'RootStackName'
    - <self>
  UseVpcMapId: !Not
    - !Condition 'NotUseVpcMapId'
  NotUseSftpKeySecret: !Equals
    - !Ref "SftpPrivateKeySecretName"
    - none
  UseSftpKeySecret: !Not
    - !Condition NotUseSftpKeySecret

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: SFTP & S3 Settings
        Parameters:
          - TargetName
          - SftpHost
          - SftpPort
          - SftpUsername
          - SftpPassword
          - SftpPrivateKeySecretName
          - SourceS3BucketName
      - Label:
          default: Network Settings
        Parameters:
          - VpcId
          - AppSubnets
          - VpcDiscoveryMapId
      - Label:
          default: ECS Configuration
        Parameters:
          - FargateCpuRamConfiguration
          - EcsClusterName
          - MicroserviceImage
          - MicroservicesCount
          - MicroserviceHostname
      - Label:
          default: Mandatory tags.
        Parameters:
          - CostcentreTag
          - ProjectTag
      - Label:
          - default: Environment tags
        Parameters:
          - EnvironmentTag
          - OwnerTag

Parameters:
  TargetName:
    Type: String
    AllowedPattern: '[a-z0-9-]'
  SftpHost:
    Type: String
  SftpPort:
    Type: Number
    MinValue: 1
    MaxValue: 65535
  SftpPath:
    Type: String
  SftpUsername:
    Type: String
  SftpPassword:
    Type: String
    NoEcho: True
  SftpPrivateKeySecretName:
    Type: String
    Default: None
  SourceS3BucketName:
    Type: String

  VpcDiscoveryMapId:
    Default: default
    Type: String
  VpcId:
    Type: AWS::EC2::VPC::Id
  AppSubnets:
    Type: List<AWS::EC2::Subnet::Id>

  EcsClusterName:
    AllowedPattern: '[a-zA-Z0-9-]+'
    Default: default
    Type: String
  EcsLaunchType:
    AllowedValues:
      - FARGATE
    Default: FARGATE
    Type: String
  FargateCpuRamConfiguration:
    AllowedValues:
      - 256!512
      - 256!1024
      - 256!2048
      - 512!1024
      - 512!2048
      - 512!3072
      - 512!4096
      - 1024!2048
      - 1024!3072
      - 1024!4096
      - 1024!5120
      - 1024!6144
      - 1024!7168
      - 1024!8192
      - 2048!2048
      - 2048!3072
      - 2048!4096
      - 2048!5120
      - 2048!6144
      - 2048!7168
      - 2048!8192
      - 4096!8192
    Default: 256!512
    Type: String

  MicroServiceName:
    AllowedPattern: '[a-zA-Z0-9-]+'
    Type: String
  MicroserviceHostname:
    AllowedPattern: '^[a-z0-9-.]+$'
    Default: default
    Type: String
  MicroserviceImage:
    Type: String
  MicroservicesCount:
    Default: 0
    MinValue: 0
    Type: Number

  RootStackName:
    Default: <self>
    Description: When part of a combined deployment, represents to the top stack name
    Type: String

  UseCfnExports:
    AllowedValues:
      - 'True'
      - 'False'
    Default: 'True'
    Type: String
  UseSsmExports:
    AllowedValues:
      - 'True'
      - 'False'
    Default: 'False'
    Type: String

  CostcentreTag:
    AllowedPattern: '[\x20-\x7E]+'
    ConstraintDescription: Must be ASCII
    MaxLength: 128
    MinLength: 2
    Type: String
  EnvironmentTag:
    AllowedPattern: '[\x20-\x7E]+'
    ConstraintDescription: Must be ASCII
    Default: nonprod
    MaxLength: 128
    MinLength: 2
    Type: String
  LiveTag:
    AllowedPattern: '[\x20-\x7E]+'
    ConstraintDescription: Must be ASCII
    Default: false
    MaxLength: 128
    MinLength: 2
    Type: String
  OwnerTag:
    AllowedPattern: '[\x20-\x7E]+'
    ConstraintDescription: Must be ASCII
    Default: self
    MaxLength: 128
    MinLength: 2
    Type: String
  ProjectTag:
    AllowedPattern: '[\x20-\x7E]+'
    ConstraintDescription: Must be ASCII
    Default: any
    MaxLength: 128
    MinLength: 2
    Type: String

Resources:
  ClusterServicesLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 60
      LogGroupName: !Sub 'sftp/${TargetName}'

  TargetQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub '${TargetName}'
      Tags:
        - Key: Name
          Value: targetonequeue
        - Key: costcentre
          Value: !Ref 'CostcentreTag'
        - Key: environment
          Value: !Ref 'EnvironmentTag'
        - Key: live
          Value: !Ref 'LiveTag'
        - Key: owner
          Value: !Ref 'OwnerTag'
        - Key: project
          Value: !Ref 'ProjectTag'
  SftpSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      SecretString: !Sub |
        {
        "dstPort":"${SftpPort}",
        "dstHost": "${SftpHost}",
        "dstUsername": ${SftpUsername},
        "dstPassword": ${SftpPassword}
        }
      Tags:
        - Key: costcentre
          Value: !Ref 'CostcentreTag'

  EcsExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Condition:
              Bool:
                aws:SecureTransport: 'true'
            Effect: Allow
            Principal:
              Service:
                - !Sub 'ecs-tasks.${AWS::URLSuffix}'
        Version: '2012-10-17'
      Description: !Sub 'Execution role for ${MicroServiceName} in ${EcsClusterName}'
      Tags:
        - Key: costcentre
          Value: !Ref 'CostcentreTag'
        - Key: environment
          Value: !Ref 'EnvironmentTag'
        - Key: live
          Value: !Ref 'LiveTag'
        - Key: owner
          Value: !Ref 'OwnerTag'
        - Key: project
          Value: !Ref 'ProjectTag'
  EcsExecutionRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:GetAuthorizationToken
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:GetRepositoryPolicy
              - ecr:DescribeRepositories
              - ecr:ListImages
              - ecr:DescribeImages
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              - '*'
            Sid: AllowsForEcrPullFromEcsAgent
          - Action:
              - ecs:DiscoverPollEndpoint
              - ecs:Poll
              - ecs:Submit*
            Effect: Allow
            Resource:
              - '*'
            Sid: AllowEcsAgentOrientedTasks
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              - !Sub 'arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${EcsClusterName}:*'
            Sid: AllowCloudWatchLoggingToSpecificLogGroup
          - Action:
              - ec2:AttachNetworkInterface
              - ec2:CreateNetworkInterface
              - ec2:CreateNetworkInterfacePermission
              - ec2:DeleteNetworkInterface
              - ec2:DeleteNetworkInterfacePermission
              - ec2:Describe*
              - ec2:DetachNetworkInterface
              - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
              - elasticloadbalancing:DeregisterTargets
              - elasticloadbalancing:Describe*
              - elasticloadbalancing:RegisterInstancesWithLoadBalancer
              - elasticloadbalancing:RegisterTargets
            Effect: Allow
            Resource:
              - '*'
            Sid: AllowsEcsAgentToPerformActionsForMicroservice
          - Sid: AllowSftpSecretAccess
            Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - !Ref SftpSecret
              - Fn::If:
                  - UseSftpKeySecret
                  - !Sub "arn:${AWS::Partition}:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${SftpPrivateKeySecretName}"
                  - !Ref "AWS::NoValue"

        Version: '2012-10-17'
      PolicyName: !Sub 'EcsExecRole'
      Roles:
        - !Ref 'EcsExecutionRole'
  EcsServiceDefinition:
    Type: AWS::ECS::Service
    DependsOn:
      - EcsTaskDefinition
      - EcsTaskRole
      - EcsExecutionRole
      - EcsExecutionRolePolicy
    Properties:
      Cluster: !Ref 'EcsClusterName'
      DeploymentController:
        Type: ECS
      DesiredCount: !If
        - ServiceCountZeroAndFargate
        - 1
        - !If
          - UseFargateCondition
          - !Ref 'MicroservicesCount'
          - !If
            - ServiceCountIsZeroCondition
            - !Ref 'AWS::NoValue'
            - !Ref 'MicroservicesCount'
      EnableECSManagedTags: 'true'
      HealthCheckGracePeriodSeconds: !Ref 'AWS::NoValue'
      LaunchType: !Ref 'EcsLaunchType'
      LoadBalancers: !Ref 'AWS::NoValue'
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - !Ref 'ServiceSecurityGroup'
          Subnets: !Ref 'AppSubnets'
      PlacementStrategies: !If
        - UseFargateCondition
        - !Ref 'AWS::NoValue'
        - - Field: instanceId
            Type: spread
          - Field: attribute:ecs.availability-zone
            Type: spread
      PropagateTags: SERVICE
      SchedulingStrategy: !If
        - UseFargateCondition
        - REPLICA
        - !If
          - ServiceCountZeroAndFargate
          - REPLICA
          - DAEMON
      ServiceRegistries: !Ref 'AWS::NoValue'
      Tags:
        - Key: Name
          Value: !Ref 'MicroServiceName'
        - Key: StackName
          Value: !Ref 'AWS::StackName'
        - Key: costcentre
          Value: !Ref 'CostcentreTag'
        - Key: environment
          Value: !Ref 'EnvironmentTag'
        - Key: live
          Value: !Ref 'LiveTag'
        - Key: owner
          Value: !Ref 'OwnerTag'
        - Key: project
          Value: !Ref 'ProjectTag'
      TaskDefinition: !Ref 'EcsTaskDefinition'
  EcsTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Command: !Ref 'AWS::NoValue'
          Environment:
            - Name: QUEUE_NAME
              Value: !GetAtt TargetQueue.QueueName
          Image: !Ref 'MicroserviceImage'
          Secrets:
            - Name: SFTP_TARGET
              ValueFrom: !Ref SftpSecret
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref 'EcsClusterName'
              awslogs-region: !Ref 'AWS::Region'
              awslogs-stream-prefix: !Ref 'ClusterServicesLogGroup'
          MemoryReservation: !Select
              - 1
              - !Split
                - '!'
                - !Ref 'FargateCpuRamConfiguration'
          Name: !Ref 'MicroServiceName'
          PortMappings: !Ref 'AWS::NoValue'
      Cpu: !Select
          - 0
          - !Split
            - '!'
            - !Ref 'FargateCpuRamConfiguration'

      ExecutionRoleArn: !GetAtt 'EcsExecutionRole.Arn'
      Family: !Ref 'MicroServiceName'
      Memory: !Select
          - 1
          - !Split
            - '!'
            - !Ref 'FargateCpuRamConfiguration'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - EC2
        - FARGATE
      Tags:
        - Key: Environment
          Value: !Ref 'AWS::StackName'
        - Key: Name
          Value: !Ref 'MicroServiceName'
        - Key: costcentre
          Value: !Ref 'CostcentreTag'
        - Key: environment
          Value: !Ref 'EnvironmentTag'
        - Key: live
          Value: !Ref 'LiveTag'
        - Key: owner
          Value: !Ref 'OwnerTag'
        - Key: project
          Value: !Ref 'ProjectTag'
      TaskRoleArn: !GetAtt 'EcsTaskRole.Arn'
  EcsTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Condition:
              Bool:
                aws:SecureTransport: 'true'
            Effect: Allow
            Principal:
              Service:
                - !Sub 'ecs-tasks.${AWS::URLSuffix}'
        Version: '2012-10-17'
      Description: !Sub 'TaskRole - ${MicroServiceName} in ${EcsClusterName}'
      ManagedPolicyArns: []
      Policies:
        - PolicyDocument:
            Statement:
              - Effect: Allow
                NotAction:
                  - sqs:TagQueue
                  - sqs:RemovePermission
                  - sqs:AddPermission
                  - sqs:UntagQueue
                  - sqs:PurgeQueue
                  - sqs:DeleteQueue
                  - sqs:CreateQueue
                  - sqs:SetQueueAttributes
                Resource:
                  - !GetAtt TargetQueue.QueueName
            Version: '2012-10-17'
          PolicyName: !Sub 'AccessToSqsQueuetargetonequeueIn${RootStackName}'
      Tags:
        - Key: costcentre
          Value: !Ref 'CostcentreTag'
        - Key: environment
          Value: !Ref 'EnvironmentTag'
        - Key: live
          Value: !Ref 'LiveTag'
        - Key: owner
          Value: !Ref 'OwnerTag'
        - Key: project
          Value: !Ref 'ProjectTag'
  ServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub 'SG for ${MicroServiceName} - ${RootStackName}'
      Tags:
        - Key: MicroserviceName
          Value: !Ref 'MicroServiceName'
        - Key: Name
          Value: !Sub '${MicroServiceName}-${RootStackName}'
        - Key: StackName
          Value: !Ref 'AWS::StackName'
        - Key: costcentre
          Value: !Ref 'CostcentreTag'
        - Key: environment
          Value: !Ref 'EnvironmentTag'
        - Key: live
          Value: !Ref 'LiveTag'
        - Key: owner
          Value: !Ref 'OwnerTag'
        - Key: project
          Value: !Ref 'ProjectTag'
      VpcId: !Ref 'VpcId'

  S3EventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: !Sub 'S3 Events from ${SourceS3BucketName}'
      EventPattern: {
        "source": [
          "aws.s3"
        ],
        "detail-type": [
          ""
        ],
        "detail": {
          "eventSource": [
            "s3.amazonaws.com"
          ],
          "eventName": [
            "PutObject"
          ],
          "requestParameters": {
            "bucketName": [
              !Ref SourceS3BucketName
            ]
          }
        }
      }
      State: ENABLED
      Targets:
        - Arn: !GetAtt TargetQueue.Arn
